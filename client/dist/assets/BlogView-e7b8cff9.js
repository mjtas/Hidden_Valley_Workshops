import{_ as m,S as f,r as p,o as r,c as a,d as e,t as g,n as b,h as c,i as u,v as k,j as v,k as y,F as _,f as x,e as w}from"./main-3d3f95d9.js";const P={components:{SubscriptionForm:f},props:{post:Object},data(){return{searchQuery:""}},created(){axios.get("https://hidden-valley-workshops.onrender.com/getBlogData").then(t=>{this.blogPosts=t.data}).catch(t=>{console.error("Error fetching blog posts:",t)})},computed:{mainTextWithHighlights(){return this.mainText.map(t=>this.highlightSearchTerms(t,this.searchQuery))}},methods:{toggleText(t){const s=this.blogPosts.find(o=>o.title===t);s&&(s.show=!s.show)},isHighlighted(t){if(!this.searchQuery)return!1;const s=new RegExp(this.searchQuery,"gi");return t.match(s)!==null},highlightSearchTerms(t,s){if(!s)return t;const o=new RegExp(s,"gi");return t.replace(o,h=>`<span class="highlight">${h}</span>`)},clearSearch(){this.searchQuery=""}}},S={class:"table-left"},B={class:"main-text"},Q={key:0,class:"main-li"},T={class:"main-right"},D={key:0,class:"booking-container"},V={class:"main-opaque"},C=["src"];function E(t,s,o,h,i,l){const d=p("SubscriptionForm");return r(),a(_,null,[e("div",S,[e("ul",B,[e("h3",{class:"h3-link",onClick:s[0]||(s[0]=n=>l.toggleText(o.post.title))},g(o.post.title),1),o.post.show?(r(),a("li",Q,[e("span",{class:b({highlight:l.isHighlighted(o.post.text)})},g(o.post.text),3)])):c("",!0)])]),e("div",T,[t.latest?(r(),a("div",D,[u(e("input",{"onUpdate:modelValue":s[1]||(s[1]=n=>i.searchQuery=n),class:"search-input",placeholder:"Search for keywords"},null,512),[[k,i.searchQuery]]),u(e("button",{onClick:s[2]||(s[2]=(...n)=>l.clearSearch&&l.clearSearch(...n)),class:"clear-button"},"X",512),[[v,i.searchQuery]])])):c("",!0),t.latest?(r(),y(d,{key:1})):c("",!0),e("div",V,[o.post.show?(r(),a("img",{key:0,class:"about-img",src:`/${o.post.image}.png`},null,8,C)):c("",!0)])])],64)}const F=m(P,[["render",E]]),H={components:{BlogPost:F},data(){return{blogPosts:[],sortedPosts:[]}},created(){axios.get("https://hidden-valley-workshops.onrender.com/getBlogData").then(t=>{this.blogPosts=t.data,this.sortPosts()}).catch(t=>{console.error("Error fetching blog posts:",t)})},methods:{sortPosts(){this.sortedPosts=[...this.blogPosts].sort((t,s)=>new Date(t.date)-new Date(s.date))}}},N={class:"main"},j={class:"main-container"},R=e("div",{class:"other-heading"},[e("h1",null,"Hidden Valley"),e("h2",null,"Blog")],-1),$={class:"about-other"};function q(t,s,o,h,i,l){const d=p("BlogPost");return r(),a("div",N,[e("div",j,[R,e("div",$,[(r(!0),a(_,null,x(i.sortedPosts,n=>(r(),a("div",{class:"block",key:n.title},[w(d,{post:n},null,8,["post"])]))),128))])])])}const L=m(H,[["render",q]]);export{L as default};
